package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _jspx_tagPool_c_forEach_var_items;
  private org.apache.jasper.runtime.TagHandlerPool _jspx_tagPool_c_forEach_varStatus_var_items;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _jspx_tagPool_c_forEach_var_items = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _jspx_tagPool_c_forEach_varStatus_var_items = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _jspx_tagPool_c_forEach_var_items.release();
    _jspx_tagPool_c_forEach_varStatus_var_items.release();
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"utf-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("        <title>Home Page</title>\n");
      out.write("        <link href=\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\" rel=\"stylesheet\">\n");
      out.write("        <link href=\"https://fonts.googleapis.com/css2?family=Lato&display=swap\" rel=\"stylesheet\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto|Varela+Round\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("        <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\n");
      out.write("        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"></script>\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n");
      out.write("        <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js\"></script>\n");
      out.write("        <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n");
      out.write("        <style>\n");
      out.write("            body {\n");
      out.write("                color: #566787;\n");
      out.write("                background-color: #b2e0df;\n");
      out.write("                font-family: 'Varela Round', sans-serif;\n");
      out.write("                font-size: 13px;\n");
      out.write("            }\n");
      out.write("            .table-responsive {\n");
      out.write("                margin: 30px 0;\n");
      out.write("            }\n");
      out.write("            .table-wrapper {\n");
      out.write("                background: #fff;\n");
      out.write("                padding: 20px 25px;\n");
      out.write("                border-radius: 3px;\n");
      out.write("                min-width: 1000px;\n");
      out.write("                box-shadow: 0 1px 1px rgba(0,0,0,.05);\n");
      out.write("            }\n");
      out.write("            .table-title {\n");
      out.write("                padding-bottom: 15px;\n");
      out.write("                background: #435d7d;\n");
      out.write("                color: #fff;\n");
      out.write("                padding: 16px 30px;\n");
      out.write("                min-width: 100%;\n");
      out.write("                margin: -20px -25px 10px;\n");
      out.write("                border-radius: 3px 3px 0 0;\n");
      out.write("            }\n");
      out.write("            .table-title h2 {\n");
      out.write("                margin: 5px 0 0;\n");
      out.write("                font-size: 24px;\n");
      out.write("            }\n");
      out.write("            .table-title .btn-group {\n");
      out.write("                float: right;\n");
      out.write("            }\n");
      out.write("            .table-title .btn {\n");
      out.write("                color: #fff;\n");
      out.write("                float: right;\n");
      out.write("                font-size: 13px;\n");
      out.write("                border: none;\n");
      out.write("                min-width: 50px;\n");
      out.write("                border-radius: 2px;\n");
      out.write("                border: none;\n");
      out.write("                outline: none !important;\n");
      out.write("                margin-left: 10px;\n");
      out.write("            }\n");
      out.write("            .table-title .btn i {\n");
      out.write("                float: left;\n");
      out.write("                font-size: 21px;\n");
      out.write("                margin-right: 5px;\n");
      out.write("            }\n");
      out.write("            .table-title .btn span {\n");
      out.write("                float: left;\n");
      out.write("                margin-top: 2px;\n");
      out.write("            }\n");
      out.write("            table.table tr th, table.table tr td {\n");
      out.write("                border-color: #e9e9e9;\n");
      out.write("                padding: 12px 15px;\n");
      out.write("                vertical-align: middle;\n");
      out.write("            }\n");
      out.write("            table.table tr th:first-child {\n");
      out.write("                width: 60px;\n");
      out.write("            }\n");
      out.write("            table.table tr th:last-child {\n");
      out.write("                width: 100px;\n");
      out.write("            }\n");
      out.write("            table.table-striped tbody tr:nth-of-type(odd) {\n");
      out.write("                background-color: #fcfcfc;\n");
      out.write("            }\n");
      out.write("            table.table-striped.table-hover tbody tr:hover {\n");
      out.write("                background: #f5f5f5;\n");
      out.write("            }\n");
      out.write("            table.table th i {\n");
      out.write("                font-size: 13px;\n");
      out.write("                margin: 0 5px;\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("            table.table td:last-child i {\n");
      out.write("                opacity: 0.9;\n");
      out.write("                font-size: 22px;\n");
      out.write("                margin: 0 5px;\n");
      out.write("            }\n");
      out.write("            table.table td a {\n");
      out.write("                font-weight: bold;\n");
      out.write("                color: #566787;\n");
      out.write("                display: inline-block;\n");
      out.write("                text-decoration: none;\n");
      out.write("                outline: none !important;\n");
      out.write("            }\n");
      out.write("            table.table td a:hover {\n");
      out.write("                color: #2196F3;\n");
      out.write("            }\n");
      out.write("            table.table td a.edit {\n");
      out.write("                color: #FFC107;\n");
      out.write("            }\n");
      out.write("            table.table td a.delete {\n");
      out.write("                color: #F44336;\n");
      out.write("            }\n");
      out.write("            table.table td i {\n");
      out.write("                font-size: 19px;\n");
      out.write("            }\n");
      out.write("            table.table .avatar {\n");
      out.write("                border-radius: 50%;\n");
      out.write("                vertical-align: middle;\n");
      out.write("                margin-right: 10px;\n");
      out.write("            }\n");
      out.write("            .pagination {\n");
      out.write("                float: right;\n");
      out.write("                margin: 0 0 5px;\n");
      out.write("            }\n");
      out.write("            .pagination li a {\n");
      out.write("                border: none;\n");
      out.write("                font-size: 13px;\n");
      out.write("                min-width: 30px;\n");
      out.write("                min-height: 30px;\n");
      out.write("                color: #999;\n");
      out.write("                margin: 0 2px;\n");
      out.write("                line-height: 30px;\n");
      out.write("                border-radius: 2px !important;\n");
      out.write("                text-align: center;\n");
      out.write("                padding: 0 6px;\n");
      out.write("            }\n");
      out.write("            .pagination li a:hover {\n");
      out.write("                color: #666;\n");
      out.write("            }\n");
      out.write("            .pagination li.active a, .pagination li.active a.page-link {\n");
      out.write("                background: #03A9F4;\n");
      out.write("            }\n");
      out.write("            .pagination li.active a:hover {\n");
      out.write("                background: #0397d6;\n");
      out.write("            }\n");
      out.write("            .pagination li.disabled i {\n");
      out.write("                color: #ccc;\n");
      out.write("            }\n");
      out.write("            .pagination li i {\n");
      out.write("                font-size: 16px;\n");
      out.write("                padding-top: 6px\n");
      out.write("            }\n");
      out.write("            .hint-text {\n");
      out.write("                float: left;\n");
      out.write("                margin-top: 10px;\n");
      out.write("                font-size: 13px;\n");
      out.write("            }\n");
      out.write("            /* Custom checkbox */\n");
      out.write("            .custom-checkbox {\n");
      out.write("                position: relative;\n");
      out.write("            }\n");
      out.write("            .custom-checkbox input[type=\"checkbox\"] {\n");
      out.write("                opacity: 0;\n");
      out.write("                position: absolute;\n");
      out.write("                margin: 5px 0 0 3px;\n");
      out.write("                z-index: 9;\n");
      out.write("            }\n");
      out.write("            .custom-checkbox label:before{\n");
      out.write("                width: 18px;\n");
      out.write("                height: 18px;\n");
      out.write("            }\n");
      out.write("            .custom-checkbox label:before {\n");
      out.write("                content: '';\n");
      out.write("                margin-right: 10px;\n");
      out.write("                display: inline-block;\n");
      out.write("                vertical-align: text-top;\n");
      out.write("                background: white;\n");
      out.write("                border: 1px solid #bbb;\n");
      out.write("                border-radius: 2px;\n");
      out.write("                box-sizing: border-box;\n");
      out.write("                z-index: 2;\n");
      out.write("            }\n");
      out.write("            .custom-checkbox input[type=\"checkbox\"]:checked + label:after {\n");
      out.write("                content: '';\n");
      out.write("                position: absolute;\n");
      out.write("                left: 6px;\n");
      out.write("                top: 3px;\n");
      out.write("                width: 6px;\n");
      out.write("                height: 11px;\n");
      out.write("                border: solid #000;\n");
      out.write("                border-width: 0 3px 3px 0;\n");
      out.write("                transform: inherit;\n");
      out.write("                z-index: 3;\n");
      out.write("                transform: rotateZ(45deg);\n");
      out.write("            }\n");
      out.write("            .custom-checkbox input[type=\"checkbox\"]:checked + label:before {\n");
      out.write("                border-color: #03A9F4;\n");
      out.write("                background: #03A9F4;\n");
      out.write("            }\n");
      out.write("            .custom-checkbox input[type=\"checkbox\"]:checked + label:after {\n");
      out.write("                border-color: #fff;\n");
      out.write("            }\n");
      out.write("            .custom-checkbox input[type=\"checkbox\"]:disabled + label:before {\n");
      out.write("                color: #b8b8b8;\n");
      out.write("                cursor: auto;\n");
      out.write("                box-shadow: none;\n");
      out.write("                background: #ddd;\n");
      out.write("            }\n");
      out.write("            /* Modal styles */\n");
      out.write("            .modal .modal-dialog {\n");
      out.write("                max-width: 400px;\n");
      out.write("            }\n");
      out.write("            .modal .modal-header, .modal .modal-body, .modal .modal-footer {\n");
      out.write("                padding: 20px 30px;\n");
      out.write("            }\n");
      out.write("            .modal .modal-content {\n");
      out.write("                border-radius: 3px;\n");
      out.write("                font-size: 14px;\n");
      out.write("            }\n");
      out.write("            .modal .modal-footer {\n");
      out.write("                background: #ecf0f1;\n");
      out.write("                border-radius: 0 0 3px 3px;\n");
      out.write("            }\n");
      out.write("            .modal .modal-title {\n");
      out.write("                display: inline-block;\n");
      out.write("            }\n");
      out.write("            .modal .form-control {\n");
      out.write("                border-radius: 2px;\n");
      out.write("                box-shadow: none;\n");
      out.write("                border-color: #dddddd;\n");
      out.write("            }\n");
      out.write("            .modal textarea.form-control {\n");
      out.write("                resize: vertical;\n");
      out.write("            }\n");
      out.write("            .modal .btn {\n");
      out.write("                border-radius: 2px;\n");
      out.write("                min-width: 100px;\n");
      out.write("            }\n");
      out.write("            .modal form label {\n");
      out.write("                font-weight: normal;\n");
      out.write("            }\n");
      out.write("            /*            body{\n");
      out.write("                            margin: 0;\n");
      out.write("                            padding: 0;\n");
      out.write("                            background-color: #b2e0df;\n");
      out.write("                            height: 100vh;\n");
      out.write("                            display: flex;\n");
      out.write("                            justify-content: center;\n");
      out.write("                            align-items: center;\n");
      out.write("                        }*/\n");
      out.write("\n");
      out.write("            .search-container{\n");
      out.write("\n");
      out.write("                margin-top: 2rem;\n");
      out.write("                width: 300px;\n");
      out.write("                background: #fff;\n");
      out.write("                height: 30px;\n");
      out.write("                border-radius: 30px;\n");
      out.write("                padding: 10px 20px;\n");
      out.write("                display: flex;\n");
      out.write("                justify-content: center;\n");
      out.write("                align-items: center;\n");
      out.write("                cursor: pointer;\n");
      out.write("                transition: 0.8s;\n");
      out.write("                /*box-shadow:inset 2px 2px 2px 0px rgba(255,255,255,.5),\n");
      out.write("                inset -7px -7px 10px 0px rgba(0,0,0,.1),\n");
      out.write("               7px 7px 20px 0px rgba(0,0,0,.1),\n");
      out.write("               4px 4px 5px 0px rgba(0,0,0,.1);\n");
      out.write("               text-shadow:  0px 0px 6px rgba(255,255,255,.3),\n");
      out.write("                          -4px -4px 6px rgba(116, 125, 136, .2);\n");
      out.write("              text-shadow: 2px 2px 3px rgba(255,255,255,0.5);*/\n");
      out.write("                box-shadow:  4px 4px 6px 0 rgba(255,255,255,.3),\n");
      out.write("                    -4px -4px 6px 0 rgba(116, 125, 136, .2),\n");
      out.write("                    inset -4px -4px 6px 0 rgba(255,255,255,.2),\n");
      out.write("                    inset 4px 4px 6px 0 rgba(0, 0, 0, .2);\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .search-container:hover > .search-input{\n");
      out.write("                width: 400px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .search-container .search-input{\n");
      out.write("                background: transparent;\n");
      out.write("                border: none;\n");
      out.write("                outline:none;\n");
      out.write("                width: 0px;\n");
      out.write("                font-weight: 500;\n");
      out.write("                font-size: 16px;\n");
      out.write("                transition: 0.8s;\n");
      out.write("\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .search-container .search-btn .fas{\n");
      out.write("                color: #5cbdbb;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            @keyframes hoverShake {\n");
      out.write("                0% {\n");
      out.write("                    transform: skew(0deg,0deg);\n");
      out.write("                }\n");
      out.write("                25% {\n");
      out.write("                    transform: skew(5deg, 5deg);\n");
      out.write("                }\n");
      out.write("                75% {\n");
      out.write("                    transform: skew(-5deg, -5deg);\n");
      out.write("                }\n");
      out.write("                100% {\n");
      out.write("                    transform: skew(0deg,0deg);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .search-container:hover{\n");
      out.write("                animation: hoverShake 0.15s linear 3;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /* The Modal (background) */\n");
      out.write("            #mobileDetailModal {\n");
      out.write("                display: none; /* Hidden by default */\n");
      out.write("                position: fixed; /* Stay in place */\n");
      out.write("                z-index: 1; /* Sit on top */\n");
      out.write("                left: 0;\n");
      out.write("                top: 0;\n");
      out.write("                width: 100%; /* Full width */\n");
      out.write("                height: 100%; /* Full height */\n");
      out.write("                overflow: auto; /* Enable scroll if needed */\n");
      out.write("                background-color: rgb(0,0,0); /* Fallback color */\n");
      out.write("                background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /* The Modal (background) */\n");
      out.write("            #addToCartModal {\n");
      out.write("                display: none; /* Hidden by default */\n");
      out.write("                position: fixed; /* Stay in place */\n");
      out.write("                z-index: 1; /* Sit on top */\n");
      out.write("                left: 0;\n");
      out.write("                top: 0;\n");
      out.write("                width: 100%; /* Full width */\n");
      out.write("                height: 100%; /* Full height */\n");
      out.write("                overflow: auto; /* Enable scroll if needed */\n");
      out.write("                background-color: rgb(0,0,0); /* Fallback color */\n");
      out.write("                background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /* Modal Content */\n");
      out.write("            .modal-content {\n");
      out.write("                background-color: #fefefe;\n");
      out.write("                margin: 15% auto; /* 15% from the top and centered */\n");
      out.write("                padding: 20px;\n");
      out.write("                border: 1px solid #888;\n");
      out.write("                width: 80%; /* Could be more or less, depending on screen size */\n");
      out.write("                max-width: 600px; /* Maximum width */\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /* The Close Button */\n");
      out.write("            .close-button {\n");
      out.write("                color: #aaa;\n");
      out.write("                float: right;\n");
      out.write("                font-size: 28px;\n");
      out.write("                font-weight: bold;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .close-button:hover,\n");
      out.write("            .close-button:focus {\n");
      out.write("                color: black;\n");
      out.write("                text-decoration: none;\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("            .clickable-row{\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .error-message {\n");
      out.write("                color: red;\n");
      out.write("                text-align: center;\n");
      out.write("                /*            font-weight: bold;\n");
      out.write("                            font-size: 18px;\n");
      out.write("                            margin-top: 20px;*/\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            /*            .error-message-adding {\n");
      out.write("                        color: red;\n");
      out.write("                        text-align: center;\n");
      out.write("                        font-weight: bold;\n");
      out.write("                        font-size: 18px;\n");
      out.write("                        margin-top: 20px;\n");
      out.write("                    }*/\n");
      out.write("            \n");
      out.write("            /* Style for shoe image container */\n");
      out.write(".shoe-image-container {\n");
      out.write("    position: relative;\n");
      out.write("    width: 250px;\n");
      out.write("    height: 150px;\n");
      out.write("    overflow: hidden;\n");
      out.write("    border-radius: 10px;\n");
      out.write("    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Style for shoe image */\n");
      out.write(".shoe-image {\n");
      out.write("    width: 100%;\n");
      out.write("    height: 100%;\n");
      out.write("    object-fit: cover;\n");
      out.write("    transition: transform 0.3s ease-in-out;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Hover effect for shoe image */\n");
      out.write(".shoe-image-container:hover .shoe-image {\n");
      out.write("    transform: scale(1.05);\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Style for shoes info */\n");
      out.write(".shoes-info {\n");
      out.write("    vertical-align: middle;\n");
      out.write("    font-size: 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Style for add to cart button */\n");
      out.write(".quantity-button-adding {\n");
      out.write("    background-color: #5cbdbb;\n");
      out.write("    color: #fff;\n");
      out.write("    border: none;\n");
      out.write("    border-radius: 5px;\n");
      out.write("    padding: 8px 15px;\n");
      out.write("    font-size: 16px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    transition: background-color 0.3s ease-in-out;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".quantity-button-adding:hover {\n");
      out.write("    background-color: #4ca8a6;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* FontAwesome icon style */\n");
      out.write(".quantity-button-adding i {\n");
      out.write("    margin-right: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write(" /* Add animation */\n");
      out.write("    .image-container {\n");
      out.write("        transition: transform 0.3s ease-in-out;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    /* Add hover effect */\n");
      out.write("    .image-container:hover {\n");
      out.write("        transform: scale(1.05);\n");
      out.write("    }\n");
      out.write("    \n");
      out.write("    /* Đưa modal lên góc phải */\n");
      out.write("    \n");
      out.write("    \n");
      out.write("      .view-cart-btn {\n");
      out.write("            position: fixed;\n");
      out.write("            top: 20px;\n");
      out.write("            right: 20px;\n");
      out.write("            z-index: 9999;\n");
      out.write("            /* Căn chỉnh nút lên góc phải */\n");
      out.write("            background-color: #007bff;\n");
      out.write("            /* Màu nền của nút */\n");
      out.write("            color: #fff;\n");
      out.write("            /* Màu chữ của nút */\n");
      out.write("            padding: 10px 20px;\n");
      out.write("            /* Kích thước của nút */\n");
      out.write("            border: none;\n");
      out.write("            /* Loại bỏ viền */\n");
      out.write("            border-radius: 5px;\n");
      out.write("            /* Bo tròn góc */\n");
      out.write("            cursor: pointer;\n");
      out.write("            /* Con trỏ chuột khi di chuột qua nút */\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .view-cart-btn:hover {\n");
      out.write("            background-color: #0056b3;\n");
      out.write("            /* Màu nền của nút khi di chuột qua */\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        \n");
      out.write("        \n");
      out.write("        body {\n");
      out.write("    color: #333; /* Thay đổi màu chữ sang màu đen */\n");
      out.write("    background-color: #f8f9fa; /* Thay đổi màu nền sang màu ghi */\n");
      out.write("    font-family: 'Roboto', sans-serif; /* Thay đổi font chữ */\n");
      out.write("    font-size: 16px;\n");
      out.write("    line-height: 1.6;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn {\n");
      out.write("    border-radius: 25px; /* Bo tròn góc nút */\n");
      out.write("    padding: 12px 24px;\n");
      out.write("    font-size: 18px;\n");
      out.write("    transition: all 0.3s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn-primary {\n");
      out.write("    background-color: #5cb85c; /* Màu nền cho nút primary */\n");
      out.write("    border-color: #5cb85c; /* Màu viền cho nút primary */\n");
      out.write("    color: #fff; /* Màu chữ cho nút primary */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn-primary:hover {\n");
      out.write("    background-color: #4cae4c; /* Màu nền khi hover */\n");
      out.write("    border-color: #4cae4c; /* Màu viền khi hover */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card {\n");
      out.write("    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Hiệu ứng bóng đổ */\n");
      out.write("    transition: box-shadow 0.3s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card:hover {\n");
      out.write("    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Hiệu ứng bóng đổ khi hover */\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("/*---dong nay la la CSS CHO HEADING WEBSITE*/\n");
      out.write("\n");
      out.write("body {\n");
      out.write("    font-family: 'Roboto', sans-serif; /* Use a luxurious font */\n");
      out.write("    background-color: #f8f8f8; /* Background color for the page */\n");
      out.write("    margin: 0;\n");
      out.write("    padding: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".luxury-heading {\n");
      out.write("    text-align: center;\n");
      out.write("    font-size: 36px;\n");
      out.write("    color: #333; /* Adjust the color to fit your website's design */\n");
      out.write("    margin-bottom: 20px; /* Add some space below the heading */\n");
      out.write("    position: relative; /* Position for the animation */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".luxury-heading a {\n");
      out.write("    color: #5cb85c; /* Adjust the color of the logout link */\n");
      out.write("    text-decoration: none; /* Remove underline */\n");
      out.write("    transition: color 0.3s ease; /* Smooth transition for color change */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".luxury-heading a:hover {\n");
      out.write("    color: #4cae4c; /* Adjust the hover color */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".luxury-form-container {\n");
      out.write("    width: 100%;\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".luxury-form {\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    align-items: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".luxury-input {\n");
      out.write("    border-radius: 20px;\n");
      out.write("    padding: 8px;\n");
      out.write("    width: 300px;\n");
      out.write("    margin: 5px;\n");
      out.write("    border: 1px solid #ccc; /* Add a border for input fields */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".luxury-button {\n");
      out.write("    border-radius: 20px;\n");
      out.write("    padding: 8px 20px;\n");
      out.write("    background-color: #5cb85c; /* Adjust the background color of the button */\n");
      out.write("    color: #fff; /* Text color for the button */\n");
      out.write("    border: none; /* Remove border */\n");
      out.write("    margin: 5px;\n");
      out.write("    cursor: pointer; /* Add pointer cursor on hover */\n");
      out.write("    transition: background-color 0.3s ease; /* Smooth transition for color change */\n");
      out.write("}\n");
      out.write("\n");
      out.write(".luxury-button:hover {\n");
      out.write("    background-color: #4cae4c; /* Adjust the hover background color */\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        </style>\n");
      out.write("\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <h1 class=\"luxury-heading\">Hello ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${sessionScope.ACCOUNT.fullName}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write(", <a href=\"MainController?action=Logout\">Logout</a></h1>\n");
      out.write("\n");
      out.write("<div class=\"luxury-form-container\">\n");
      out.write("    <form action=\"MainController\" class=\"luxury-form\">\n");
      out.write("        <input type=\"number\" name=\"minPrice\" placeholder=\"Min price...\" class=\"luxury-input\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${param.minPrice}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("        <input type=\"number\" name=\"maxPrice\" placeholder=\"Max price...\" class=\"luxury-input\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${param.maxPrice}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("        <input type=\"submit\" name=\"action\" value=\"Lookup\" class=\"luxury-button\"/>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
      out.write("        <div class=\"container-xl\">\n");
      out.write("            <div class=\"table-responsive\">\n");
      out.write("<div class=\"container-xl\">\n");
      out.write("    <div class=\"row\">\n");
      out.write("        <h3 class=\"section-title\">Featured Shoes</h3>\n");
      out.write("    </div>\n");
      out.write("    <div class=\"row\">\n");
      out.write("        ");
      if (_jspx_meth_c_forEach_0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("                \n");
      out.write("\n");
      out.write("<!-- Icon to trigger view cart modal -->\n");
      out.write("<div class=\"view-cart-icon\" style=\"position: fixed; top: 20px; right: 20px;\">\n");
      out.write("    <button type=\"button\" class=\"btn btn-outline-primary\" data-toggle=\"modal\" data-target=\"#cartModal\">\n");
      out.write("        <i class=\"fas fa-shopping-cart\"></i> View Cart\n");
      out.write("    </button>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- Modal for viewing cart data -->\n");
      out.write("<div class=\"modal fade\" id=\"cartModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"cartModalLabel\" aria-hidden=\"true\">\n");
      out.write("    <div class=\"modal-dialog modal-xl\" role=\"document\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <h5 class=\"modal-title\" id=\"cartModalLabel\">Shopping Cart</h5>\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n");
      out.write("                    <span aria-hidden=\"true\">&times;</span>\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <div class=\"table-responsive\">\n");
      out.write("                    <div class=\"table-wrapper\">\n");
      out.write("                        <table class=\"table table-striped table-hover\">\n");
      out.write("                            <thead>\n");
      out.write("                                <tr>\n");
      out.write("                                    <th>Cart No.</th>\n");
      out.write("                                    <th>User Id</th>\n");
      out.write("                                    <th>Shoes Id</th>\n");
      out.write("                                    <th>Quantity</th>\n");
      out.write("                                    <th>Actions</th>\n");
      out.write("                                </tr>\n");
      out.write("                            </thead>\n");
      out.write("                            <tbody>\n");
      out.write("                                <!-- Iterate over cart items -->\n");
      out.write("                                ");
      if (_jspx_meth_c_forEach_1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                            </tbody>\n");
      out.write("                        </table>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- Modal for each row -->\n");
      if (_jspx_meth_c_forEach_2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <!-- The Modal --> <!--BẢNG NÀY LÀ BẢNG HIỆN THỊ INFO SHOES KHI TA CLICK VÀO HÌNH -->\n");
      out.write("        <div id=\"mobileDetailModal\" style=\"display:none;\">\n");
      out.write("            <div class=\"modal-content\">\n");
      out.write("                <span class=\"close-button\">&times;</span>\n");
      out.write("                <h2 id=\"modalShoesName\">Shoes Name</h2>\n");
      out.write("                <!--<img id=\"modalImage\" alt=\"Shoes Image\" style=\"width: 100px; height: 100px\">-->\n");
      out.write("                <p><b>Description: </b><span id=\"modalDescription\"></span></p>\n");
      out.write("                <p id=\"modalDetails\"><b>Price: </b><span id=\"modalPrice\"></span><br>\n");
      out.write("                    <b>Year of Production: </b><span id=\"modalYearOfProduction\"></span><br>\n");
      out.write("                    <b>Quantity: </b><span id=\"modalQuantity\"></span><br>\n");
      out.write("                    <b>Not Sale: </b><span id=\"modalNotSale\"></span>\n");
      out.write("                </p\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- The Modal -->\n");
      out.write("    <div id=\"addToCartModal\" style=\"display:none;\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <span class=\"close-button-quantity\">&times;</span>\n");
      out.write("            <h2>Add to Cart</h2>\n");
      out.write("            <form method=\"POST\" action=\"MainController\">\n");
      out.write("                <!--<img id=\"modalImage\" alt=\"Shoes Image\" style=\"width: 100px; height: 100px\">-->\n");
      out.write("                <label for=\"quantity\">Quantity:</label>\n");
      out.write("                <input type=\"number\" id=\"cartQuantity\" name=\"quantity\" min=\"1\">\n");
      out.write("                <input type=\"hidden\" id=\"cartShoesId\" name=\"shoesId\">\n");
      out.write("                <input type=\"submit\" class=\"btn btn-primary\" name=\"action\" value=\"Add To Cart\" />\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("    <!-- ERROR MESSAGE CỦA ADDING TO CART -->\n");
      out.write("    <!--     <div id=\"errorMessage\" class=\"error-message-adding\" style=\"display: none;\"></div>-->\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("    if (");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.POSITIVE_NUMBER_ERROR != null}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write(") {\n");
      out.write("        swal({\n");
      out.write("            title: \"Opps!\",\n");
      out.write("            text: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.POSITIVE_NUMBER_ERROR}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("',\n");
      out.write("            icon: \"error\",\n");
      out.write("            button: \"Ok\"\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    if (");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.QUANTITY_ERROR != null}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write(") {\n");
      out.write("        swal({\n");
      out.write("            title: \"Opps!\",\n");
      out.write("            text: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.QUANTITY_ERROR}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("',\n");
      out.write("            icon: \"error\",\n");
      out.write("            button: \"Ok\"\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("    if (");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.INVALID_RANGE != null}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write(") {\n");
      out.write("        swal({\n");
      out.write("            title: \"Opps!\",\n");
      out.write("            text: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${requestScope.INVALID_RANGE}", java.lang.String.class, (PageContext)_jspx_page_context, null));
      out.write("',\n");
      out.write("            icon: \"error\",\n");
      out.write("            button: \"Ok\"\n");
      out.write("        });\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("<script>\n");
      out.write("    function displayErrorMessage(message) {\n");
      out.write("        var errorMessageDiv = document.getElementById(\"errorMessage\");\n");
      out.write("        errorMessageDiv.innerHTML = message;\n");
      out.write("        errorMessageDiv.style.display = \"block\";\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("<script>\n");
      out.write("    var quantityError = \"");
      out.print( request.getAttribute("QUANTITY_ERROR"));
      out.write("\";\n");
      out.write("    if (quantityError && quantityError.trim() !== \"\") {\n");
      out.write("        displayErrorMessage(quantityError);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    function displayErrorMessage(message) {\n");
      out.write("        var errorMessageDiv = document.getElementById(\"errorMessage\");\n");
      out.write("        errorMessageDiv.innerHTML = message;\n");
      out.write("        errorMessageDiv.style.display = \"block\";\n");
      out.write("        setTimeout(function () {\n");
      out.write("            errorMessageDiv.style.display = \"none\";\n");
      out.write("        }, 3000); // Hide the message after 3 seconds\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<!--<body>\n");
      out.write("     Error message container \n");
      out.write("    <div id=\"errorMessage\" class=\"error-message\" style=\"display: none;\"></div>-->\n");
      out.write("\n");
      out.write("<!-- Your existing JSP content goes here -->\n");
      out.write("\n");
      out.write("<!-- Include this script block at the end of your body content -->\n");
      out.write("<!--    <script>\n");
      out.write("        // Check for the presence of QUANTITY_ERROR attribute and display error message\n");
      out.write("        var quantityError = \"");
      out.print( request.getAttribute("QUANTITY_ERROR"));
      out.write("\";\n");
      out.write("        if (quantityError && quantityError.trim() !== \"\") {\n");
      out.write("            displayErrorMessage(quantityError);\n");
      out.write("        }\n");
      out.write("    </script>-->\n");
      out.write("<script>\n");
      out.write("    document.addEventListener('DOMContentLoaded', function () {\n");
      out.write("        // Function to open the modal and display mobile details\n");
      out.write("        const showModal = (mobileData) => {\n");
      out.write("            document.getElementById('modalShoesName').textContent = mobileData.shoesName;\n");
      out.write("            document.getElementById('modalDescription').textContent = mobileData.description;\n");
      out.write("            document.getElementById('modalPrice').textContent = mobileData.price;\n");
      out.write("            document.getElementById('modalYearOfProduction').textContent = mobileData.yearOfProduction;\n");
      out.write("            document.getElementById('modalQuantity').textContent = mobileData.quantity;\n");
      out.write("            document.getElementById('modalNotSale').textContent = mobileData.notSale;\n");
      out.write("\n");
      out.write("            document.getElementById('mobileDetailModal').style.display = \"block\";\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        // Function to open the modal and display mobile details\n");
      out.write("        const showQuantityModal = (mobileData) => {\n");
      out.write("            console.log('hehe', mobileData.shoesId)\n");
      out.write("            document.getElementById('cartShoesId').value = mobileData.shoesId;\n");
      out.write("\n");
      out.write("            document.getElementById('addToCartModal').style.display = \"block\";\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        // Event listener for closing the modal\n");
      out.write("        document.querySelector('.close-button').addEventListener('click', function () {\n");
      out.write("            document.getElementById('mobileDetailModal').style.display = \"none\";\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // Event listener for closing the modal\n");
      out.write("        document.querySelector('.close-button-quantity').addEventListener('click', function () {\n");
      out.write("            document.getElementById('addToCartModal').style.display = \"none\";\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // Attach an event listener to each row\n");
      out.write("        document.querySelectorAll('.quantity-button-adding').forEach(row => {\n");
      out.write("            row.addEventListener('click', function () {\n");
      out.write("                const quantityData = {\n");
      out.write("                    shoesId: this.getAttribute('data-mobile-cart-id'),\n");
      out.write("                };\n");
      out.write("\n");
      out.write("                showQuantityModal(quantityData);\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        // Attach an event listener to each row\n");
      out.write("        document.querySelectorAll('.clickable-row').forEach(row => {\n");
      out.write("            row.addEventListener('click', function () {\n");
      out.write("                const mobileData = {\n");
      out.write("                    shoesId: this.getAttribute('data-mobile-id'),\n");
      out.write("                    shoesName: this.getAttribute('data-mobile-name'),\n");
      out.write("                    description: this.getAttribute('data-description'),\n");
      out.write("                    price: this.getAttribute('data-price'),\n");
      out.write("                    yearOfProduction: this.getAttribute('data-year-of-production'),\n");
      out.write("                    quantity: this.getAttribute('data-quantity'),\n");
      out.write("                    notSale: this.getAttribute('data-not-sale'),\n");
      out.write("                    image: this.getAttribute('data-image')\n");
      out.write("                };\n");
      out.write("                console.log(mobileData)\n");
      out.write("                showModal(mobileData);\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("\n");
      out.write("//            // Prevent row click when the \"Add To Cart\" button is clicked\n");
      out.write("//            document.querySelectorAll('.btn-add-cart').forEach(button => {\n");
      out.write("//                button.addEventListener('click', function (e) {\n");
      out.write("//                    e.stopPropagation();\n");
      out.write("//                });\n");
      out.write("//            });\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_forEach_0(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_forEach_0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _jspx_tagPool_c_forEach_var_items.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_forEach_0.setPageContext(_jspx_page_context);
    _jspx_th_c_forEach_0.setParent(null);
    _jspx_th_c_forEach_0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${sessionScope.SHOES_DATA}", java.lang.Object.class, (PageContext)_jspx_page_context, null));
    _jspx_th_c_forEach_0.setVar("m");
    int[] _jspx_push_body_count_c_forEach_0 = new int[] { 0 };
    try {
      int _jspx_eval_c_forEach_0 = _jspx_th_c_forEach_0.doStartTag();
      if (_jspx_eval_c_forEach_0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("            <div class=\"col-lg-4 col-md-6 mb-4\">\n");
          out.write("                <div class=\"card h-100 shoe-card\">\n");
          out.write("                    <div class=\"image-container clickable-row\" \n");
          out.write("                         data-mobile-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.shoesId}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" \n");
          out.write("                         data-mobile-name=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.shoesName}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" \n");
          out.write("                         data-description=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.description}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\"\n");
          out.write("                         data-price=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.price}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" \n");
          out.write("                         data-year-of-production=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.yearOfProduction}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" \n");
          out.write("                         data-quantity=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.quantity}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" \n");
          out.write("                         data-not-sale=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.notSale}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" \n");
          out.write("                         data-image=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.image}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\">\n");
          out.write("                        <img src=\"./asset/image/");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.image}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" class=\"card-img-top\" alt=\"Shoe Image\">\n");
          out.write("                    </div>\n");
          out.write("                    <div class=\"card-body\">\n");
          out.write("                        <h5 class=\"card-title\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.shoesName}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("</h5>\n");
          out.write("                        <p class=\"card-text\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.shoesId}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("</p>\n");
          out.write("                        <p class=\"card-text\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.description}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("</p>\n");
          out.write("                        <input type=\"submit\" class=\"btn btn-outline-success quantity-button-adding\" value=\"Add to cart\" data-mobile-cart-id=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.shoesId}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" />\n");
          out.write("                    </div>\n");
          out.write("                </div>\n");
          out.write("            </div>\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_forEach_0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_forEach_0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_forEach_0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_forEach_0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_forEach_0.doFinally();
      _jspx_tagPool_c_forEach_var_items.reuse(_jspx_th_c_forEach_0);
    }
    return false;
  }

  private boolean _jspx_meth_c_forEach_1(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_forEach_1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _jspx_tagPool_c_forEach_varStatus_var_items.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_forEach_1.setPageContext(_jspx_page_context);
    _jspx_th_c_forEach_1.setParent(null);
    _jspx_th_c_forEach_1.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${sessionScope.CARTS}", java.lang.Object.class, (PageContext)_jspx_page_context, null));
    _jspx_th_c_forEach_1.setVar("m");
    _jspx_th_c_forEach_1.setVarStatus("counter");
    int[] _jspx_push_body_count_c_forEach_1 = new int[] { 0 };
    try {
      int _jspx_eval_c_forEach_1 = _jspx_th_c_forEach_1.doStartTag();
      if (_jspx_eval_c_forEach_1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                                    <tr>\n");
          out.write("                                        <td>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${counter.count}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("</td>\n");
          out.write("                                        <td>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.userId}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("</td>\n");
          out.write("                                        <td>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.shoesId}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("</td>\n");
          out.write("                                        <td>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.quantity}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("</td>\n");
          out.write("                                        <td>\n");
          out.write("                                            <!-- Button to trigger the modal -->\n");
          out.write("                                            <button type=\"button\" class=\"btn btn-outline-danger\" data-toggle=\"modal\" data-target=\"#quantityModal");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${counter.count}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" style=\"width: 150px;\">\n");
          out.write("                                                Remove To Cart\n");
          out.write("                                            </button>\n");
          out.write("                                        </td>\n");
          out.write("                                    </tr>\n");
          out.write("                                ");
          int evalDoAfterBody = _jspx_th_c_forEach_1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_forEach_1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_forEach_1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_forEach_1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_forEach_1.doFinally();
      _jspx_tagPool_c_forEach_varStatus_var_items.reuse(_jspx_th_c_forEach_1);
    }
    return false;
  }

  private boolean _jspx_meth_c_forEach_2(PageContext _jspx_page_context)
          throws Throwable {
    PageContext pageContext = _jspx_page_context;
    JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_forEach_2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _jspx_tagPool_c_forEach_varStatus_var_items.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_forEach_2.setPageContext(_jspx_page_context);
    _jspx_th_c_forEach_2.setParent(null);
    _jspx_th_c_forEach_2.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${sessionScope.CARTS}", java.lang.Object.class, (PageContext)_jspx_page_context, null));
    _jspx_th_c_forEach_2.setVar("m");
    _jspx_th_c_forEach_2.setVarStatus("counter");
    int[] _jspx_push_body_count_c_forEach_2 = new int[] { 0 };
    try {
      int _jspx_eval_c_forEach_2 = _jspx_th_c_forEach_2.doStartTag();
      if (_jspx_eval_c_forEach_2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    <div class=\"modal fade\" id=\"quantityModal");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${counter.count}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"quantityModalLabel\" aria-hidden=\"true\">\n");
          out.write("        <div class=\"modal-dialog\" role=\"document\">\n");
          out.write("            <div class=\"modal-content\">\n");
          out.write("                <div class=\"modal-header\">\n");
          out.write("                    <h5 class=\"modal-title\" id=\"quantityModalLabel\">Enter Quantity</h5>\n");
          out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n");
          out.write("                        <span aria-hidden=\"true\">&times;</span>\n");
          out.write("                    </button>\n");
          out.write("                </div>\n");
          out.write("                <div class=\"modal-body\">\n");
          out.write("                    <form action=\"MainController\" method=\"POST\">\n");
          out.write("                        <input type=\"hidden\" name=\"cartId\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.evaluateExpression("${m.cartId}", java.lang.String.class, (PageContext)_jspx_page_context, null));
          out.write("\"/>\n");
          out.write("                        <label for=\"quantityInput\">Quantity:</label>\n");
          out.write("                        <input type=\"number\" name=\"quantity\" id=\"quantityInput\" class=\"form-control\" required/>\n");
          out.write("                        <br>\n");
          out.write("                        <button type=\"submit\" name=\"action\" value=\"Remove To Cart\" class=\"btn btn-outline-danger btn-block\">Remove To Cart</button>\n");
          out.write("                    </form>\n");
          out.write("                </div>\n");
          out.write("            </div>\n");
          out.write("        </div>\n");
          out.write("    </div>\n");
          int evalDoAfterBody = _jspx_th_c_forEach_2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_forEach_2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_forEach_2[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_forEach_2.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_forEach_2.doFinally();
      _jspx_tagPool_c_forEach_varStatus_var_items.reuse(_jspx_th_c_forEach_2);
    }
    return false;
  }
}
